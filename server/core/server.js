// Generated by CoffeeScript 1.4.0

(function() {
  var HTTPhandler, WORDS, cxn, fs, http, i, j, k, network, redis, socket_io, v, _i, _len;
  redis = require('redis');
  http = require('http');
  fs = require('fs');
  socket_io = require('socket.io');
  cxn = require('./connection.js');
  WORDS = {
    adj: ['humans'],
    noun: ['animals', 'books', 'bugs', 'buildings', 'features', 'jobs', 'pets', 'restaurant'],
    verb: ['gardening']
  };
  HTTPhandler = http.createServer(function(req, res) {
    return fs.readFile("" + __dirname + "/index.html", function(err, data) {
      if (err != null) {
        res.writeHead(500);
        return res.end('Error serving index.html!');
      } else {
        res.writeHead(200);
        return res.end(data);
      }
    });
  }).listen(8000);
  network = {
    rc: redis.createClient(),
    io: socket_io.listen(HTTPhandler).set('log level', 1).sockets
  };
  for (k in WORDS) {
    v = WORDS[k];
    j = 0;
    for (_i = 0, _len = v.length; _i < _len; _i++) {
      i = v[_i];
      WORDS[k][j] = {
        topic: i,
        list: fs.readFileSync("words/" + k + "/" + i + ".txt").toString().split('\n')
      };
      j++;
    }
  }
  cxn.prototype.NETWORK = network;
  cxn.prototype.WORDS = WORDS;
  network.rc.on('error', function(err) {
    return console.log("Error : " + err);
  });
  return network.io.on('connection', function(sock) {
    return new cxn({
      SOCKET: sock
    });
  });
})();

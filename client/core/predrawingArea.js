// Generated by CoffeeScript 1.4.0

define(['core/word'], function(Word) {
  var PredrawingArea;
  return PredrawingArea = (function() {

    PredrawingArea.prototype.x = 0;

    PredrawingArea.prototype.y = 0;

    PredrawingArea.prototype.w = 600;

    PredrawingArea.prototype.h = 400;

    PredrawingArea.prototype.margin = 16;

    PredrawingArea.prototype.FONTSIZE = 20;

    PredrawingArea.prototype.words = [];

    PredrawingArea.prototype.chosen = [];

    PredrawingArea.prototype.button = {
      ok: {
        text: 'OK',
        x: 0,
        y: 0,
        w: 60,
        h: 40,
        color: '#ACFAD3'
      },
      reset: {
        text: 'Reset',
        x: 0,
        y: 0,
        w: 80,
        h: 40,
        color: '#FA8CB1'
      }
    };

    function PredrawingArea(params) {
      var k, v;
      for (k in params) {
        v = params[k];
        this[k] = v;
      }
      if (!(this.game != null)) {
        throw 'game was not set!';
      }
      this.resize();
    }

    PredrawingArea.prototype.add = function(words) {
      var value;
      this.words = (function() {
        var _i, _len, _ref, _results;
        _ref = words.slice(0, 10);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          value = _ref[_i];
          _results.push(new Word({
            value: value
          }));
        }
        return _results;
      })();
      this.arrangeWords();
      return this.draw();
    };

    PredrawingArea.prototype.setTextStyle = function() {
      var ac;
      ac = atom.context;
      ac.textBaseline = 'middle';
      ac.font = "bold " + this.FONTSIZE + "px sans-serif";
      ac.fillStyle = '#000';
      return this;
    };

    PredrawingArea.prototype.arrangeWords = function() {
      var i, w, wordH, wordW, x, y, _i, _j, _len, _len1, _ref, _ref1;
      wordW = this.words[0].w;
      wordH = this.words[0].h;
      i = 0;
      x = this.x + (((this.w >> 1) - wordW) >> 1);
      y = this.y + 2 * this.margin + this.FONTSIZE;
      _ref = this.words.slice(0, 5);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        w = _ref[_i];
        w.x = x;
        w.y = y;
        w.index = i;
        y += wordH + this.margin;
        i++;
      }
      x = this.x + (this.w >> 1) + (((this.w >> 1) - wordW) >> 1);
      y = this.y + 2 * this.margin + this.FONTSIZE;
      _ref1 = this.words.slice(5, 10);
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        w = _ref1[_j];
        w.x = x;
        w.y = y;
        w.index = i;
        y += wordH + this.margin;
        i++;
      }
      return this;
    };

    PredrawingArea.prototype.clear = function() {
      return atom.context.clearRect(this.x, this.y, this.w, this.h);
    };

    PredrawingArea.prototype.draw = function() {
      var ac, b, w, word1, word2, wordH, x, y, _i, _j, _len, _len1, _ref, _ref1;
      ac = atom.context;
      this.clear();
      ac.fillStyle = '#eee';
      ac.fillRect(this.x, this.y, this.w, this.h);
      this.setTextStyle();
      if (this.game.network.role === 'd') {
        ac.textAlign = 'left';
        ac.fillText("Pick two words to draw :", this.x + this.margin, this.y + (this.FONTSIZE >> 1) + this.margin);
        _ref = this.words;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          w = _ref[_i];
          w.draw();
        }
        wordH = this.words[0].h + this.words[0].margin;
        word1 = this.chosen[0] || '';
        word2 = this.chosen[1] || '';
        ac.textAlign = 'left';
        ac.fillStyle = '#000';
        if (word1.length + word2.length === 0) {
          ac.fillText("No words selected.", this.x + this.margin, this.y + (this.FONTSIZE >> 1) + this.margin + wordH * 6);
        } else {
          ac.fillText("You'll be drawing '" + word1 + (' ' + word2) + "'.", this.x + this.margin, this.y + (this.FONTSIZE >> 1) + this.margin + wordH * 6);
        }
        x = this.x + this.w;
        y = this.y + this.FONTSIZE + wordH * 6;
        _ref1 = [this.button.reset, this.button.ok];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          b = _ref1[_j];
          x -= this.margin + b.w;
          b.x = x;
          b.y = y - (b.h >> 1);
          ac.fillStyle = b.color;
          ac.fillRect(b.x, b.y, b.w, b.h);
          ac.fillStyle = '#000';
          ac.textAlign = 'center';
          ac.fillText(b.text, x + (b.w >> 1), y);
        }
      } else {
        ac.textAlign = 'center';
        ac.fillText("Waiting on " + this.game.network.whoseTurn + " to begin...", this.x + (this.w >> 1), this.y + (this.h >> 1));
      }
      return this;
    };

    PredrawingArea.prototype.resize = function() {
      this.x = this.margin;
      this.y = this.margin;
      return this;
    };

    return PredrawingArea;

  })();
});

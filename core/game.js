// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['core/stageTitle'], function(stageTitle) {
  var DrawThisGame;
  return DrawThisGame = (function(_super) {

    __extends(DrawThisGame, _super);

    DrawThisGame.prototype.entities = [];

    DrawThisGame.prototype.mode = {
      current: 'draw',
      draw: function(dt) {
        return this.updateEntities();
      }
    };

    DrawThisGame.prototype.draw = function() {
      var e, _i, _len, _ref;
      atom.context.clear();
      _ref = this.entities;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        e = _ref[_i];
        if (e.draw != null) {
          e.draw();
        }
      }
    };

    DrawThisGame.prototype.updateEntities = function() {};

    function DrawThisGame() {
      this.registerInputs();
      this;

    }

    DrawThisGame.prototype.registerInputs = function() {
      atom.input.bind(atom.button.LEFT, 'mouseleft');
      return atom.input.bind(atom.touch.TOUCHING, 'touchfinger');
    };

    DrawThisGame.prototype.update = function(dt) {
      return this.mode[this.mode.current].apply(this, [dt]);
    };

    return DrawThisGame;

  })(atom.Game);
});
